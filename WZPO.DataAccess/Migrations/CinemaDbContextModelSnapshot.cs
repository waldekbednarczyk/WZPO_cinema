// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WZPO.DataAccess.Context;

namespace WZPO.DataAccess.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    partial class CinemaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("WZPO.DataAccess.Models.CinemaRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("ScreenSize")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CinemaRooms");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SeanceId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SeanceId");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.PrivelageName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<bool>("CanEditCinemaRoom")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEditSeance")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEditUser")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdministratorId");

                    b.HasIndex("UserId");

                    b.ToTable("PrivelageName");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<int?>("SeanceId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SeanceId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.Seance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CinemaRoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CinemaRoomId");

                    b.ToTable("Seances");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CinemaRoomId")
                        .HasColumnType("int");

                    b.Property<int>("Column")
                        .HasColumnType("int");

                    b.Property<bool>("IsVip")
                        .HasColumnType("bit");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CinemaRoomId");

                    b.HasIndex("ReservationId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("PriceId")
                        .HasColumnType("int");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int?>("SeatId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PriceId");

                    b.HasIndex("ReservationId");

                    b.HasIndex("SeatId");

                    b.HasIndex("UserId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.Administrator", b =>
                {
                    b.HasBaseType("WZPO.DataAccess.Models.User");

                    b.HasDiscriminator().HasValue("Administrator");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.Client", b =>
                {
                    b.HasBaseType("WZPO.DataAccess.Models.User");

                    b.HasDiscriminator().HasValue("Client");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.Film", b =>
                {
                    b.HasOne("WZPO.DataAccess.Models.Seance", null)
                        .WithMany("Films")
                        .HasForeignKey("SeanceId");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.PrivelageName", b =>
                {
                    b.HasOne("WZPO.DataAccess.Models.Administrator", null)
                        .WithMany("Privelages")
                        .HasForeignKey("AdministratorId");

                    b.HasOne("WZPO.DataAccess.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.Reservation", b =>
                {
                    b.HasOne("WZPO.DataAccess.Models.Client", null)
                        .WithMany("Reservations")
                        .HasForeignKey("ClientId");

                    b.HasOne("WZPO.DataAccess.Models.Seance", "Seance")
                        .WithMany()
                        .HasForeignKey("SeanceId");

                    b.HasOne("WZPO.DataAccess.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Seance");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.Seance", b =>
                {
                    b.HasOne("WZPO.DataAccess.Models.CinemaRoom", "CinemaRoom")
                        .WithMany()
                        .HasForeignKey("CinemaRoomId");

                    b.Navigation("CinemaRoom");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.Seat", b =>
                {
                    b.HasOne("WZPO.DataAccess.Models.CinemaRoom", null)
                        .WithMany("Seats")
                        .HasForeignKey("CinemaRoomId");

                    b.HasOne("WZPO.DataAccess.Models.Reservation", null)
                        .WithMany("Seats")
                        .HasForeignKey("ReservationId");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.Ticket", b =>
                {
                    b.HasOne("WZPO.DataAccess.Models.Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId");

                    b.HasOne("WZPO.DataAccess.Models.Reservation", "Reservation")
                        .WithMany("Ticket")
                        .HasForeignKey("ReservationId");

                    b.HasOne("WZPO.DataAccess.Models.Seat", "Seat")
                        .WithMany()
                        .HasForeignKey("SeatId");

                    b.HasOne("WZPO.DataAccess.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Price");

                    b.Navigation("Reservation");

                    b.Navigation("Seat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.CinemaRoom", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.Reservation", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.Seance", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.Administrator", b =>
                {
                    b.Navigation("Privelages");
                });

            modelBuilder.Entity("WZPO.DataAccess.Models.Client", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
